# .bashrc

#
# Envorionment Variables
#
export PROJECTS=$HOME/Projects
export PATH=$PATH:$HOME/bin:$HOME/.local/android-sdk-linux_86/tools:$HOME/.local/android-sdk-linux_86/platform-tools
export CDPATH=.:~:/media:/:/etc/:/var:/usr
export HISTIGNORE="&:ls:[bf]g:exit"
export EDITOR=vim
export BROWSER=chromium-browser
export GOOGLE="http://google.com#q="
export DDG="https://duckduckgo.com/?q="
export MCPAN="https://metacpan.org/search?q="
export CPAN="http://search.cpan.org/search?q="
export GITHUB=https://delonnewman@github.com/delonnewman
export GITHUB_USER=delonnewman
export APPLE_ID=delon.newman@gmail.com

#
# Shell Options
#
shopt -s cdspell
shopt -s cmdhist
shopt -s dotglob

# Load RVM function
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" 

# load perlbrew
[[ -s "$HOME/perl5/perlbrew/etc/bashrc" ]] && source "$HOME/perl5/perlbrew/etc/bashrc"

#
# Functions
#

# colors
GREY=30
RED=31
GREEN=32
YELLOW=33
BLUE=34
PURPLE=35
CYAN=36
WHITE=39

# bold / normal
BOLD=1
NORMAL=0

function color {
    COLOR=$1
    BOLD=$2
    if [ -z $2 ]; then
        BOLD=0
    fi
    echo "\[\033[${BOLD};${COLOR}m\]"
}

function web {
    location=$@
    if [ -z $@ ]; then
    file=$(tempfile)

    while read -t .5 line; do
        echo $line >> $file
    done

    if [ -s $file ]; then
        location=$file
    fi
    fi

    if [ -z $BROWSER ]; then
    echo BROWSER envrionment variable is not set
    else
        $BROWSER $location &> /dev/null &
    fi
}

function google {
    USAGE="Usage: google QUERY"

    if [ -z "$@" ]; then
    echo $USAGE
    else
        q=$@
        q=${q// /+}
        web "$GOOGLE"$q
    fi
}

function mcpan {
    USAGE="Usage: mcpan QUERY"

    if [ -z "$@" ]; then
    echo $USAGE
    else
        q=$@
        q=${q// /+}
        web "$MCPAN"$q
    fi
}

function cpan {
    USAGE="Usage: cpan QUERY"

    if [ -z "$@" ]; then
    echo $USAGE
    else
        q=$@
        q=${q// /+}
        web "$CPAN"$q
    fi
}

function ddg {
    USAGE="Usage: ddg QUERY"

    if [ -z "$@" ]; then
    echo $USAGE
    else
        q=$@
        q=${q// /+}
        web "$DDG"$q
    fi
}

function gh-clone {
    USAGE='Usage: gh-clone REPO'

    if [ -z "$1" ]; then
    echo $USAGE
    else
    repo=$1
    url=$GITHUB/$repo.git

    echo cloning from $url...
        $(git clone $url)
    fi
}

function u1-clone {
    USAGE='Usage: u1-clone REPO'
    u1="$HOME/Ubuntu One/git"

    if [ -z "$1" ]; then
    echo $USAGE
    else
    repo=$1
    path="$u1/$repo.git"

    echo cloning from $path...
        $(git clone "$path")
    fi
}

function git-branch {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return
    echo "git@${ref#refs/heads/}:"
}

function progress {
    cmd=$1
    printf "[%60s] 0\045\r" " "
    for ((i=1;i<=10;i++)) {
       $($cmd)
       printf "[%60s] $((i*10))\045\r" " "
       printf "[%$((i*6))s\r" " " | tr ' ' '#'
    }
    echo -e "\nDone."
}

# work hours
END=16
BEGIN=5

function get-time {
    t=$(date +%I:%M:%S)
    hour=$(date +%k)
    if (( $hour > $END )) || (( $hour < $BEGIN )) ; then
    echo -e '\033[0;31m'$t
    else
    echo $t
    fi
}

#
# Aliases
# 
alias ls='ls -sFk -h --color=auto'
alias ll='ls -lA --color=auto'
alias reload='source ~/.bashrc'
alias dir='dir --color=auto -1'
alias du='du -h'
alias df='df -hT'
alias r='fc -s'
alias mime='file -i'
alias rm='rm -r'
alias cp='cp -r'
alias grep='grep --color=auto'

alias vim='screen vim'

# git aliases
alias ga='git add'
alias gb='git branch'
alias gco='git checkout'
alias gr='git remote'
alias grm='git rm'
alias gc='git clone'
alias gs='git status'
alias gd='git diff'
alias gco='git checkout'
alias gbr='git branch'
alias gl='git log'
alias gpush='git push'
alias gpull='git pull'
alias gcommit='git commit'

# apt-get aliases
alias ag='sudo apt-get'
alias agi='sudo apt-get install'
alias ags='apt-cache search'

#
# Prompt Customization
#

GRAD1=`tty|cut -d/ -f3-4`
C1=$(color $WHITE  $BOLD)
C2=$(color $YELLOW $BOLD)
C3=$(color $GREY   $BOLD)
C4=$(color $YELLOW $BOLD)
C5=$(color $WHITE)

# change color for root
if [ $(id -u) -eq 0 ]; then
    C2=$(color $RED $BOLD)
    C4=$(color $RED $BOLD)
fi

# and here's the prompt
PS1="$C2[$C4\u@\h$C3:$C5\w$C2] [$C3!$C4\! $C3@$C4\$(get-time)$C4 $C3&$C4\j$C2]\n$C2[$C3\$(git-branch)$C4\$$C2>$C5 "
PS2=" $C3|$C5 "
PS4=" $C3+$C5 "

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
